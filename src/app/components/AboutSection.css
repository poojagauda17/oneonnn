.about-section {
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-radius: 30px;

  color: white;
  font-family: 'Poppins', sans-serif;
  flex-wrap: wrap;
}
.about-section-section{
  max-width: 1200px;
  margin: 0 auto;
  margin-top: 70px;
}
.about-left {
  flex: 1;
  display: flex;
  justify-content: center;
  gap: 20px;
  flex-wrap: wrap;
  margin-bottom: 20px;
  margin-left: -44px;

}

.can-image {
  object-fit: contain;
}

.orange-can {
  transform: rotate(-15deg);
}

.about-right {
  flex: 1;
  padding: 20px 30px;
  min-width: 300px;
}

.about-heading {
  font-size: 36px;
  font-weight: 700;
  line-height: 1.3;
  margin-bottom: 20px;
}

.about-description {
  font-size: 16px;
  line-height: 1.6;
  color: #f0f0f0 ;
  margin-bottom: 25px;
}

.about-button {
  background: white;
  color: black;
  border-radius: 10px;
  padding: 12px 30px;
  font-weight: 600;
  font-size: 15px;
  border: none;
  cursor: pointer;
  transition: 0.3s ease;
}

.about-button:hover {
  background-color: #f0f0f0;
}

/* âœ… Responsive */
@media (max-width: 768px) {
  .about-section {
    flex-direction: column;
    text-align: center;
  }

  .about-heading {
    font-size: 24px;
  }

  .about-description {
    font-size: 14px;
  }

  .about-button {
    margin: 0 auto;
  }
  .split-image-section{
    position: relative;
    width: 300px;
    height: 300px;
    margin: auto;
    perspective: 1000px;
  }
  .split-image-section {
    width: 100%;
    max-width: 1200px;
    margin: auto;
    aspect-ratio: 1 / 1; /* Or use padding-bottom technique for older browsers */
    position: relative;
    overflow: hidden;
  }
  
  .image-fragments {
    display: grid;
    grid-template-columns: repeat(5, 1fr); /* Use JS GRID_SIZE here if CSS-in-JS */
    grid-template-rows: repeat(5, 1fr);
    width: 100%;
    height: 100%;
  }
  
  .fragment {
    background-image: url("/path-to-your-image.jpg"); /* Set correct path */
    background-size: 500% 500%; /* 5x5 grid, so 500% */
    background-repeat: no-repeat;
    animation: fadeInOut 2s ease-in-out infinite;
  }
  
  /* Animation to fade in, pause, fade out */
  @keyframes fadeInOut {
    0%, 100% { opacity: 0; transform: scale(0.9); }
    30% { opacity: 1; transform: scale(1); }
    70% { opacity: 1; transform: scale(1); }
  }
  
}
.split-image-section {
  position: relative;
  width: 100%;
  height: 400px;
  margin: auto;
  perspective: 1000px;
}

.image-fragments {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: repeat(5, 1fr);
  width: 101%;
  height: 100%;
  position: relative;
}

.fragment {
  background-image: url("/image/Image.png"); /* <-- Your actual image */
  background-size: 500% 500%;
  background-repeat: no-repeat;
  width: 100%;
  height: 100%;
  animation: animateFragments 8s infinite ease-in-out;
}

/* Updated keyframes: Add pause using duplicated final frame */
@keyframes animateFragments {
  0% {
    transform: scale(1) translate(0, 0);
    opacity: 1;
  }

  10% {
    transform: translate3d(10px, -10px, 50px) rotateY(90deg);
    opacity: 0.4;
  }

  25% {
    transform: scale(0.2) translate3d(-50px, 50px, -80px) rotateX(180deg);
    opacity: 0.1;
  }

  40% {
    transform: translate3d(5px, 5px, 20px) rotateY(45deg);
    opacity: 0.5;
  }

  60% {
    transform: scale(1) translate(0, 0);
    opacity: 1;
  }

  100% {
    transform: scale(1) translate(0, 0);
    opacity: 1; /* Maintain full image for 2s (25% of 8s = 2s) */
  }
}
